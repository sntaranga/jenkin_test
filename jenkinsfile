#!groovy
//init()

pipeline {
    agent any

//    options {
//         skipDefaultCheckout()
//    }

    stages {
        stage('Checkout and Maven Build') {
    	    options {
        		skipDefaultCheckout()
    	    }

            stages {
                stage('Checkout') {
                    steps {
                        script {
                            mystep('tutu')
                        }
                        myappcheckout()
                    }
                }
                stage('Maven Build') {
                    steps {
                        script {
                            mystep('build')
                        }
                        myls()
                    }
                }
                stage('Thin Build') {
                    steps {
                        script {
                            mystep('thin build')
                        }
                    }
                }
            }
            post {
                always {
                    cleanWs()
                }
            }
        }
        stage('parallel build') {
          
             parallel {
                stage('p1'){
                   stages {
                         stage('p1s1'){
                              steps {
                                 script {
                                    mystep('build-p1-s1')
                                 }
                              } 
                         }
                         stage('p1s2'){
                              steps {
                                 script {
                                    mystep('build-p1s2')
                                 }
                              } 
                         }
                         stage('p1s3'){

                                    stages{
                                        stage(pp1s1){
                                          steps {
                                            script {
                                             mystep('build-p1s2')
                                            }
                                          } 
                                        }
                                    }

                         }
                   }
                }
                stage('p2'){
                   stages {
                         stage('p2s1'){
                              steps {
                                 script {
                                    mystep('build-p2s1')
                                 }
                              } 
                         }
                         stage('p1s2'){
                              steps {
                                 script {
                                    mystep('build-p2s2')
                                 }
                              } 
                         }
                   }                    
                }

             }
        }
        
        stage('Docker Build and Publish') {
            steps {
                script {
                    mystep('B A P')
                }
            }
            post {
                always {
                    cleanWs()
                }
            }
        }
    }
}

def mystep(String name) {
    println "Hello $name"

    def randomInt = (Math.random() * 10).toInteger() // Random integer between 0 and 99
    println "Random Integer using Math.random: $randomInt"

    sleep(randomInt)
}
def init(){	
		properties([
        disableConcurrentBuilds(),
        parameters([
            booleanParam(name: 'boolparam', defaultValue: false, description: 'test param1'),
            stringParam(name: 'stringparam', defaultValue: '', 
            description: 'testparam2')
        ])
    ])
}
def myappcheckout(){
    print env
    sh "mkdir git;cd git"
    checkout scm
}
def myls(){
   sh "pwd"
   sh "ls -ltr"
}

